#!/bin/bash
EXTRA_JVM_ARGUMENTS="$EXTRA_JVM_ARGUMENTS -Djava.net.preferIPv4Stack=true"
EXTRA_JVM_ARGUMENTS="$EXTRA_JVM_ARGUMENTS -Djavax.net.ssl.trustStore=/opt/scm-server/conf/truststore.jks"
EXTRA_JVM_ARGUMENTS="$EXTRA_JVM_ARGUMENTS -Djavax.net.ssl.trustStorePassword=changeit"
EXTRA_JVM_ARGUMENTS="$EXTRA_JVM_ARGUMENTS -Dsonia.scm.init.script.d=/opt/scm-server/init.script.d"
EXTRA_JVM_ARGUMENTS="$EXTRA_JVM_ARGUMENTS -Dsonia.scm.restart-migration.wait=1000"
if [ "$(doguctl config "container_config/memory_limit" -d "empty")" != "empty" ];  then
  # Retrieve configurable java limits from dogu config, valid default values exist
  MEMORY_LIMIT_MAX_PERCENTAGE=$(doguctl config "container_config/java_max_ram_percentage")
  MEMORY_LIMIT_MIN_PERCENTAGE=$(doguctl config "container_config/java_min_ram_percentage")

  echo "Setting memory limits to MaxRAMPercentage: ${MEMORY_LIMIT_MAX_PERCENTAGE} and MinRAMPercentage: ${MEMORY_LIMIT_MIN_PERCENTAGE}..."
  EXTRA_JVM_ARGUMENTS="$EXTRA_JVM_ARGUMENTS -XX:MaxRAMPercentage=${MEMORY_LIMIT_MAX_PERCENTAGE}"
  EXTRA_JVM_ARGUMENTS="$EXTRA_JVM_ARGUMENTS -XX:MinRAMPercentage=${MEMORY_LIMIT_MIN_PERCENTAGE}"
fi

if [ "$(doguctl config 'caching/workdir/size')" -gt 0 ];  then
  SCM_WEBAPP_WORKINGCOPYPOOLSIZE=$(doguctl config "caching/workdir/size")
  export SCM_WEBAPP_WORKINGCOPYPOOLSIZE
  export SCM_WEBAPP_WORKINGCOPYPOOLSTRATEGY=sonia.scm.repository.work.SimpleCachingWorkingCopyPool
fi

if [ "$(doguctl config 'caching/stores/enabled')" == "true" ];  then
  export SCM_WEBAPP_CACHE_STORE_ENABLED="true"
else
  export SCM_WEBAPP_CACHE_STORE_ENABLED="false"
fi
if [ "$(doguctl config 'caching/dataFiles/size')" -gt 0 ];  then
  DATA_FILE_CACHE_SIZE=$(doguctl config 'caching/dataFiles/size')
  export SCM_WEBAPP_CACHE_DATAFILE_ENABLED=true
  EXTRA_JVM_ARGUMENTS="$EXTRA_JVM_ARGUMENTS -Dscm.cache.dataFile.maximumSize=${DATA_FILE_CACHE_SIZE}"
fi

if [ "$(doguctl config 'logging/root' -d 'empty')" != "empty" ];  then
  SCM_CORE_LOG_LEVEL=$(doguctl config "logging/root")
  echo "Setting log level to ${SCM_CORE_LOG_LEVEL}..."
  export SCM_LOG_LOGGER="sonia.scm:${SCM_CORE_LOG_LEVEL},com.cloudogu.scm:${SCM_CORE_LOG_LEVEL},sonia.scm.filter.GZipFilter:WARN,sonia.scm.filter.GZipResponseStream:WARN,sonia.scm.util.ServiceUtil:WARN,sonia.scm.script:WARN"
fi
export SCM_WEBAPP_DISABLEFEEDBACK=true
export SCM_WEBAPP_RESTART_EXITCODE=42
export SCM_WEBAPP_RESTART_STRATEGY=exit